# FLUENDO S.A.
# Copyright (C) <2024>  <support@fluendo.com>
# Platform config file for Emscripten.

import os
import os.path

# These variants are enabled by default, but not available on our platform
variants.rust = False
variants.mingw = False

# unfortunately, variants.rust = False is not enough, there is no check to use cargo
# in "cerbero/build/build.py", _get_meson_target_file_contents()
#cargo_home = None

if not toolchain_prefix:
    # the bundle contains 'emsdk-X.Y.Z' as a root folder
    # we need to unify it, because have no that info on config level
    toolchain_prefix = os.path.join(home_dir, "emsdk")

# after emsdk activate, we've got .emscripten config file
dot_emscripten_config = os.path.join(toolchain_prefix, '.emscripten')
if os.path.exists(dot_emscripten_config):
    # after execution, this config file defines:
    #   BINARYEN_ROOT, EMSCRIPTEN_ROOT, LLVM_ROOT, NODE_JS
    os.environ['EM_CONFIG'] = dot_emscripten_config
    exec(open(dot_emscripten_config).read(), globals())

    # emconfigure and emmake prepare the environment for build,
    # see get_building_env() from emsdk/upstream/emscripten/tools/building.py
    # that is used in those wrappers.
    var_path_execs = (
        ('CC', EMSCRIPTEN_ROOT, 'emcc'),
        ('CXX', EMSCRIPTEN_ROOT, 'em++'),
        ('AR', EMSCRIPTEN_ROOT, 'emar'),
        ('LD', EMSCRIPTEN_ROOT, 'emcc'),
        ('NM', LLVM_ROOT, 'llvm-nm'),
        ('LDSHARED', EMSCRIPTEN_ROOT, 'emcc'),
        ('RANLIB', EMSCRIPTEN_ROOT, 'emranlib'),
    )

    for var,path,exe in var_path_execs:
        env[var] = path + '/' + exe
